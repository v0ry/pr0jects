Bitte Text eingeben:

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Text Statistik:
6 Sätze, 942 Zeichen
916 Buchstaben (45 Großbuchstaben, 871 Kleinbuchstaben)

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl:  Nr. | Satz
-----+----------------------------------------
   1 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   2 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   3 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
   4 | Somit ist die Fragestellung ungeloest.
   5 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
   6 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl:  Nr. | Satz
-----+----------------------------------------
   1 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   2 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
   3 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   4 | Somit ist die Fragestellung ungeloest.
   5 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
   6 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl:  Nr. | Satz
-----+----------------------------------------
   1 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   2 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden und Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   3 | Somit ist die Fragestellung ungeloest.
   4 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
   5 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Text Statistik:
5 Sätze, 944 Zeichen
919 Buchstaben (45 Großbuchstaben, 874 Kleinbuchstaben)

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl:  Nr. | Satz
-----+----------------------------------------
   1 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   2 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden und Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   3 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
   4 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
   5 | Somit ist die Fragestellung ungeloest.

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl:  Nr. | Satz
-----+----------------------------------------
   1 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP und Somit ist die Fragestellung ungeloest.
   2 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden und Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   3 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
   4 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl:  Nr. | Satz
-----+----------------------------------------
   1 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP und Somit ist die Fragestellung ungeloest.
   2 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
   3 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik und Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden und Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Text Statistik:
3 Sätze, 948 Zeichen
925 Buchstaben (45 Großbuchstaben, 880 Kleinbuchstaben)

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Programmende!
