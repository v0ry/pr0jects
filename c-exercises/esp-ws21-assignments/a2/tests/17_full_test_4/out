Bitte Text eingeben:

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Text Statistik:
18 Sätze, 2826 Zeichen
2748 Buchstaben (135 Großbuchstaben, 2613 Kleinbuchstaben)

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl:  Nr. | Satz
-----+----------------------------------------
   1 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   2 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   3 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
   4 | Somit ist die Fragestellung ungeloest.
   5 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
   6 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
   7 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   8 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   9 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
  10 | Somit ist die Fragestellung ungeloest.
  11 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
  12 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
  13 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
  14 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
  15 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
  16 | Somit ist die Fragestellung ungeloest.
  17 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
  18 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl:  Nr. | Satz
-----+----------------------------------------
   1 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   2 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   3 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
   4 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
   5 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
   6 | Somit ist die Fragestellung ungeloest und Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   7 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   8 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
   9 | Somit ist die Fragestellung ungeloest.
  10 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
  11 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
  12 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik und Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
  13 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
  14 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
  15 | Somit ist die Fragestellung ungeloest.
  16 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl:  Nr. | Satz
-----+----------------------------------------
   1 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   2 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind und Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   3 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
   4 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
   5 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
   6 | Somit ist die Fragestellung ungeloest und Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   7 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   8 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
   9 | Somit ist die Fragestellung ungeloest.
  10 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
  11 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
  12 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik und Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
  13 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
  14 | Somit ist die Fragestellung ungeloest.
  15 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Text Statistik:
15 Sätze, 2832 Zeichen
2757 Buchstaben (135 Großbuchstaben, 2622 Kleinbuchstaben)

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl:  Nr. | Satz
-----+----------------------------------------
   1 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   2 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind und Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   3 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
   4 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
   5 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
   6 | Somit ist die Fragestellung ungeloest und Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   7 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   8 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
   9 | Somit ist die Fragestellung ungeloest.
  10 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP und Somit ist die Fragestellung ungeloest.
  11 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen und Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik und Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
  12 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
  13 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des ersten Satzes: Nummer des ersten Satzes: Nummer des ersten Satzes: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Nummer des ersten Satzes: Nummer des zweiten Satzes: Nummer des zweiten Satzes: 
Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Text Statistik:
11 Sätze, 2840 Zeichen
2769 Buchstaben (135 Großbuchstaben, 2634 Kleinbuchstaben)

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl:  Nr. | Satz
-----+----------------------------------------
   1 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen und Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik und Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
   2 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind und Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   3 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
   4 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP.
   5 | Koennte fuer mindestens ein Problem aus NP gezeigt werden, dass dieses prinzipiell nicht schnell loesbar ist, waere P\neq NP bewiesen.
   6 | Somit ist die Fragestellung ungeloest und Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik.
   7 | Dabei ist die Frage, ob die Menge aller Probleme, die schnell loesbar sind und die Menge aller Probleme, bei der man eine vorgeschlagene Loesung schnell auf Korrektheit ueberpruefen kann, identisch sind.
   8 | Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.
   9 | Somit ist die Fragestellung ungeloest.
  10 | Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP und Somit ist die Fragestellung ungeloest.
  11 | Das P-NP-Problem ist ein ungeloestes Problem der Mathematik, speziell der Komplexitaetstheorie in der theoretischen Informatik und Wuerde man fuer alle schnell pruefbaren Probleme einen Algorithmus finden, der diese auch schnell loest, so gaelte P=NP und Es ist zwar klar, dass man bei allen schnell loesbaren Problemen auch schnell die Korrektheit einer Loesung ueberpruefen kann, in der umgekehrten Richtung ist dies jedoch nicht klar: Fuer manche Probleme existiert zwar ein Algorithmus, der eine vorgeschlagene Loesung schnell ueberpruefen kann, aber es konnte weder ein Algorithmus gefunden werden, der auch schnell eine korrekte Loesung findet, noch konnte die Unmoeglichkeit eines solchen Algorithmus bewiesen werden.

Wählen Sie eine Option:
  t: Text-Statistik
  s: Zwei Sätze vertauschen
  c: Zwei Sätze zusammenketten
  p: Text mit Zeilennummer ausgeben
  o: Text ohne Zeilennummer ausgeben
  e: Programm beenden

Ihre Wahl: Programmende!
